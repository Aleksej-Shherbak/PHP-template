# To prevent processing requests with undefined server names 
server {
    listen      80;
    server_name "";
    return      444;
}

server {
    listen 80;
	# listen 443;
    server_name 127.0.0.1 localhost;
	
	#ssl on;
	#ssl_certificate /etc/nginx/ssl/example.com.pem;
	#ssl_certificate_key /etc/nginx/ssl/example.com.key;
	
	# Enables server-side protection from BEAST attacks
	# http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
	#ssl_prefer_server_ciphers on;

	# Disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	# Ciphers chosen for forward secrecy and compatibility
	# http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
	#ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

	root /var/www/backend/public;
	
	index index.php;
	
	# Default character set
	charset utf-8;
	
	# Turn off /var/log/nginx/access.log writes
	access_log off;
	log_not_found off;
	
	# Send file is an optimization, but does not work
	# across unix sockets which I use for php fpm so is best
	# used for local static content only
	sendfile off;
	
	# Dont send the nginx version number in error pages and server header
    server_tokens off;

	error_page 404 /;

	# Frontend index.html
	location / {
        root /var/www/frontend;
        index index.html;
    }

	# Backend
	location /api {    
        try_files $uri $uri/ /index.php?$query_string;
	}
	
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        fastcgi_read_timeout 1000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
	
	location ~ /\.(?!well-known).* {
        deny all;
    }
}

# Redirect all http traffic to https
#server {
#        listen 80;
#        server_name rci-api.dynatronsoftware.com;
#        return 301 https://$host$request_uri;
#}
